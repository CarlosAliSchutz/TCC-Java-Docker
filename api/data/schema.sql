DROP TABLE IF EXISTS usuario CASCADE;
DROP TABLE IF EXISTS permissao CASCADE;
DROP TABLE IF EXISTS amizade CASCADE;
DROP TABLE IF EXISTS post CASCADE;
DROP TABLE IF EXISTS curtida CASCADE;
DROP TABLE IF EXISTS comentario CASCADE;


CREATE TABLE usuario (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	nome VARCHAR(255) NOT NULL,
	email VARCHAR(255) NOT NULL,
	apelido VARCHAR(50),
	data_nascimento DATE NOT NULL,
	senha VARCHAR(128) NOT NULL,
	img_perfil VARCHAR(512),
	ativo boolean,
	CONSTRAINT pk_usuario PRIMARY KEY (id),
	CONSTRAINT uk_usuario_email UNIQUE (email)
);

CREATE TABLE permissao (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	nome VARCHAR(100) NOT NULL,
	usuario_id BIGINT NOT NULL,
	CONSTRAINT pk_permissao PRIMARY KEY (id),
	CONSTRAINT uk_permissao UNIQUE (nome, usuario_id),
	CONSTRAINT fk_permissao_usuario FOREIGN KEY (usuario_id) REFERENCES usuario
);

CREATE TABLE amizade (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  destinatario_id BIGINT NOT NULL,
  remetente_id BIGINT NOT NULL,
  status VARCHAR(10) NOT NULL,
  CONSTRAINT pk_amizade PRIMARY KEY (id),
  CONSTRAINT status_check CHECK (status IN ('SOLICITADO', 'NEGADO', 'ACEITO')),
  CONSTRAINT fk_amizade_destinatario FOREIGN KEY (destinatario_id) REFERENCES usuario,
  CONSTRAINT fk_amizade_remetente FOREIGN KEY (remetente_id) REFERENCES usuario
);

CREATE TABLE post (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	autor_id BIGINT NOT NULL,
	conteudo VARCHAR(512) NOT NULL,
	criacao DATE NOT NULL,
	disponivel VARCHAR(10) NOT NULL,
	curtidas_post INT,
	CONSTRAINT pk_post PRIMARY KEY (id),
	CONSTRAINT fk_post_autor FOREIGN KEY (autor_id) REFERENCES usuario,
	CONSTRAINT disponivel_check CHECK (disponivel IN ('PUBLICO', 'PRIVADO'))
);

CREATE TABLE curtida (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	post_id BIGINT NOT NULL,
	usuario_id BIGINT NOT NULL,
	CONSTRAINT pk_curtida PRIMARY KEY (id),
	CONSTRAINT fk_curtida_post FOREIGN KEY (post_id) REFERENCES post,
	CONSTRAINT fk_curtida_usuario FOREIGN KEY (usuario_id) REFERENCES usuario
);

CREATE TABLE comentario (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	comentario VARCHAR(255),
	post_id BIGINT NOT NULL,
	usuario_id BIGINT NOT NULL,
	CONSTRAINT pk_comentario PRIMARY KEY (id),
	CONSTRAINT fk_comentario_post FOREIGN KEY (post_id) REFERENCES post,
	CONSTRAINT fk_comentario_usuario FOREIGN KEY (usuario_id) REFERENCES usuario
);
